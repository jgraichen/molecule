doctype html
html
  head
    meta charset="utf-8"
    title Molecule - Input
    link rel="stylesheet" href="example.css"
    link rel="stylesheet" href="molecule.css"
    script src="molecule.js"

  body
    coffee:
      window.React = require 'react'
      window.Molecule = require 'lib'
      window.$ = React.createElement

    header
      a href="index.html" Index
      h1 Molecule: Input & Form Control
    article
      h2 Simple input elements
      section
        markdown:
          An `input` element. Molecule provides very basic styling using the default theme.

              <input type="text" class="molecule input" value="A given value"></input>

        .example#example1
          | <input type="text" class="molecule input" value="A given value"></input>

        markdown:
          Example of React component:

              $ Molecule.Input, defaultValue: 'A given value'

              $ Molecule.Input, className: 'shortest', placeholder: 'Shortest input'
              $ Molecule.Input, className: 'shorter', placeholder: 'Shorter input'
              $ Molecule.Input, className: 'short', placeholder: 'Short input'
              $ Molecule.Input, placeholder: 'Default input'
              $ Molecule.Input, className: 'long', placeholder: 'Long input'
              $ Molecule.Input, className: 'longer', placeholder: 'Longer input'
              $ Molecule.Input, className: 'fluid', placeholder: 'Fluid input'

        .example
          #example2
          coffee:
            root = document.getElementById 'example2'
            elem = $ 'div', null,
              $ 'p', null,
                $ Molecule.Input, defaultValue: 'A given value'
              $ 'p', null,
                $ Molecule.Input, className: 'shortest', placeholder: 'Shortest input'
              $ 'p', null,
                $ Molecule.Input, className: 'shorter', placeholder: 'Shorter input (5em)'
              $ 'p', null,
                $ Molecule.Input, className: 'short', placeholder: 'Short input (10em)'
              $ 'p', null,
                $ Molecule.Input, placeholder: 'Default input (20em)'
              $ 'p', null,
                $ Molecule.Input, className: 'long', placeholder: 'Long input (30em)'
              $ 'p', null,
                $ Molecule.Input, className: 'longer', placeholder: 'Longer input (40em)'
              $ 'p', null,
                $ Molecule.Input, className: 'fluid', placeholder: 'Fluid input'

            React.render elem, root

        markdown:
          A group can be used to combine several input elements.

              $ Molecule.Group, null,
                $ Molecule.Input, className: 'shortest', placeholder: '123', maxLength: 4
                $ Molecule.Input, className: 'shortest', placeholder: '123', maxLength: 4
                $ Molecule.Input, className: 'shorter', placeholder: '123456', maxLength: 6
                $ Molecule.Input, className: 'shorter', placeholder: '123456', maxLength: 6

        .example
          #example3
          coffee:
            root = document.getElementById 'example3'
            elem = $ 'div', null,
              $ Molecule.Group, null,
                $ Molecule.Input, className: 'shortest', placeholder: '0000', maxLength: 4
                $ Molecule.Input, className: 'shortest', placeholder: '0000', maxLength: 4
                $ Molecule.Input, className: 'shorter', placeholder: '001122', maxLength: 6
                $ Molecule.Input, className: 'shorter', placeholder: '001122', maxLength: 6

            React.render elem, root
